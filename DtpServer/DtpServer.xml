<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DtpServer</name>
    </assembly>
    <members>
        <member name="T:DtpServer.AspNetCore.MVC.Filters.ValidateModelAttribute">
            <summary>
            Validate the package
            </summary>
        </member>
        <member name="M:DtpServer.AspNetCore.MVC.Filters.ValidateModelAttribute.#ctor(System.Type,System.Type)">
            <summary>
            
            </summary>
        </member>
        <member name="M:DtpServer.AspNetCore.MVC.Filters.ValidateModelAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Validate data
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DtpServer.AspNetCore.MVC.Filters.ValidatePackageAttribute">
            <summary>
            Validate the package
            </summary>
        </member>
        <member name="M:DtpServer.AspNetCore.MVC.Filters.ValidatePackageAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Validate data
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:DtpServer.Attributes.ValidateModelStateAttribute">
            <summary>
            From Swagger Codegen Contributors
            https://github.com/swagger-api/swagger-codegen
            Model state validation attribute
            </summary>
        </member>
        <member name="M:DtpServer.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DtpServer.Controllers.ApiController.ApiOk(System.Object,System.String,System.String)">
            <summary>
            Returns a standard api return object as a wrapper around the data object
            </summary>
            <param name="data">if null then no render</param>
            <param name="status">if null then Success</param>
            <param name="message">if null then no render</param>
            <returns>Returns a standard api return object as a wrapper around the data object</returns>
        </member>
        <member name="T:DtpServer.Controllers.ClaimController">
            <summary>
            Handles trust related stuff.
            </summary>
        </member>
        <member name="F:DtpServer.Controllers.ClaimController.trustDBService">
            <summary>
            
            </summary>
        </member>
        <member name="M:DtpServer.Controllers.ClaimController.#ctor(DtpCore.Interfaces.ITrustDBService)">
            <summary>
            
            </summary>
            <param name="trustDBService"></param>
        </member>
        <member name="M:DtpServer.Controllers.ClaimController.GetOne(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Get one claim
            </summary>
            <param name="issuerId"></param>
            <param name="subjectId"></param>
            <param name="scope"></param>
            <param name="type"></param>
            <param name="meta"></param>
            <returns></returns>
        </member>
        <member name="M:DtpServer.Controllers.ClaimController.GetHistory(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Return a list of the latest create claims.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DtpServer.Controllers.ClaimController.GetLastest(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Return a list of the latest create claims.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DtpServer.Controllers.IdentityController">
            <summary>
            
            </summary>
        </member>
        <member name="F:DtpServer.Controllers.IdentityController.trustDBContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:DtpServer.Controllers.IdentityController.#ctor(DtpCore.Repository.TrustDBContext)">
            <summary>
            
            </summary>
            <param name="trustDBContext"></param>
        </member>
        <member name="M:DtpServer.Controllers.IdentityController.Search(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="term"></param>
            <param name="scope"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:DtpServer.Controllers.IdentityController.GetMetadata(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="T:DtpServer.Controllers.PackageController">
            <summary>
            Handles packages 
            </summary>
        </member>
        <member name="M:DtpServer.Controllers.PackageController.#ctor(MediatR.IMediator,DtpCore.Interfaces.IPackageSchemaValidator,DtpCore.Interfaces.ITrustDBService,System.IServiceProvider)">
            <summary>
            Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DtpServer.Controllers.PackageController.PostPackage(DtpCore.Model.Package)">
            <summary>
            Add a package to the server
            </summary>
            <param name="package"></param>
            <returns></returns>
        </member>
        <member name="M:DtpServer.Controllers.PackageController.GetPackageInfoCollection(System.Int64)">
            <summary>
            List all packages
            </summary>
            <returns></returns>
        </member>
        <member name="T:DtpServer.Controllers.QueryController">
            <summary>
            Query the Graph
            </summary>
        </member>
        <member name="M:DtpServer.Controllers.QueryController.#ctor(DtpGraphCore.Interfaces.IGraphQueryService)">
            <summary>
            Constructor
            </summary>
            <param name="service"></param>
            <param name="queryRequestService"></param>
        </member>
        <member name="M:DtpServer.Controllers.QueryController.ResolvePost(DtpGraphCore.Model.QueryRequest)">
            <summary>
            Query the graph on multiple subject
            </summary>
            <param name="query"></param>
            <returns>The result of the query</returns>
        </member>
        <member name="T:DtpServer.Extensions.JsonOptionsSetup">
            <summary>
            http://www.dotnet-programming.com/post/2017/05/08/Aspnet-core-Deserializing-Json-with-Dependency-Injection.aspx
            </summary>
        </member>
        <member name="M:DtpServer.Pages.Packages.DetailsModel.OnGetAsync(System.Nullable{System.Int32})">
            <summary>
            Get a package
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DtpServer.Pages.Packages.IndexModel.OnGetAsync(System.Nullable{System.Int32},System.String)">
            <summary>
            Load data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DtpServer.Pages.Packages.IndexModel.OnGetVerifyAsync(System.Nullable{System.Int32})">
            <summary>
            Verify package
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DtpServer.Pages.Packages.IndexModel.OnGetPublishAsync(System.Nullable{System.Int32})">
            <summary>
            Re publish package
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DtpServer.Pages.StatisticsModel.AutoSize(System.Int64)">
            <summary>
            Formats from bytes to KB,MB,GB,TB 
            </summary>
            <param name="number">Bytes to format</param>
            <returns></returns>
        </member>
        <member name="T:DtpServer.Program">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="F:DtpServer.Program.isDevelopment">
            <summary>
            
            </summary>
        </member>
        <member name="P:DtpServer.Program.ServiceHandler.Configuration">
            <summary>
            Static configuration 
            </summary>
        </member>
        <member name="T:DtpServer.Services.WorkflowHostedService">
            <summary>
            Depricated, replaced by SchedulerHostedService for better async handling.
            </summary>
        </member>
    </members>
</doc>
